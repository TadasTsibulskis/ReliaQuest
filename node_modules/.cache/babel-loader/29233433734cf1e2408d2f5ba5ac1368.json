{"ast":null,"code":"var _jsxFileName = \"/Users/tadas/Downloads/ui-assessment-pokedex-snr/src/components/PokemonList/PokemonList.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { useGetPokemons } from '../../hooks/useGetPokemons';\nimport { Modal } from '../Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PokemonList = () => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    pokemons,\n    loading\n  } = useGetPokemons();\n  const [modalOpen, updateModalOpen] = useState(false);\n  const [selectedPokemon, updateSelectedPokemon] = useState('');\n  const [searchText, updateSearchText] = useState('');\n  const [filteredPokemon, updateFilteredPokemon] = useState([]);\n\n  const handleTextChange = event => {\n    const query = event.target.value.toLowerCase();\n    const results = getResults(query);\n    updateFilteredPokemon;\n    updateSearchText(query);\n  };\n\n  const getResults = query => {\n    return pokemons.reduce((resultArray, pokemon) => {\n      // Copy the category, in order to avoid mutating the argument directoy\n      const pokemonCopy = { ...pokemon\n      }; // If there is a match, push it to the resultArray.\n\n      if (pokemon.name.toLowerCase().includes(query)) {\n        resultArray.push(pokemonCopy); // Else, if the category has children, search for match inside its children\n      } else if (pokemon === null || pokemon === void 0 ? void 0 : pokemon.types) {\n        const subResults = getResults(pokemon.types, query); // If there are any matches in the children, push the whole category(from top level) to the results array,\n        // so that the array structure can be preserved\n\n        if (subResults.length) {\n          pokemonCopy.types = subResults;\n          resultArray.push(pokemonCopy);\n        }\n      }\n\n      return resultArray;\n    }, []);\n  };\n\n  const handleCardClick = id => {\n    updateSelectedPokemon(id);\n    updateModalOpen(true);\n  };\n\n  const handleModalClose = () => updateModalOpen(false);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.search,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"search\",\n        value: searchText,\n        onChange: handleTextChange,\n        placeholder: \"Filter Pok\\xE9mon...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 19\n    }, this), filteredPokemon.map(pkmn => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.pokemonCard,\n      onClick: () => handleCardClick(pkmn.id),\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: pkmn.image,\n        alt: pkmn.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.specs,\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: pkmn.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"#\", pkmn.number]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), pkmn.types.map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${classes.types} ${type.toLowerCase()}`,\n          children: [type, \"\\xA0\"]\n        }, type, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, pkmn.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Modal, {\n      pokemonId: selectedPokemon,\n      open: modalOpen,\n      onClose: handleModalClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PokemonList, \"wVQ5dQYaS/6u7ekRZprjxTHqaCM=\", false, function () {\n  return [useStyles, useGetPokemons];\n});\n\n_c = PokemonList;\nconst useStyles = createUseStyles({\n  root: {\n    width: '100%',\n    textAlign: 'center',\n    padding: '32px',\n    boxSizing: 'border-box',\n    display: 'flex',\n    flexDirection: 'column',\n    rowGap: '20px'\n  },\n  search: {\n    display: 'flex',\n    width: '100%',\n    '& input': {\n      color: '#171E2b',\n      width: '100%',\n      padding: '10px'\n    }\n  },\n  pokemonCard: {\n    display: 'flex',\n    padding: '10px',\n    '& img': {\n      maxHeight: '100px'\n    },\n    '& h4': {\n      margin: '5px 0px'\n    },\n    '& h5': {\n      margin: '0px 0px 10px 0px'\n    },\n    border: '1px solid #7C89A3',\n    '&:hover': {\n      backgroundColor: 'rgba(0, 0, 0, 0.2)',\n      cursor: 'pointer'\n    }\n  },\n  specs: {\n    textAlign: 'left',\n    marginLeft: '10px'\n  },\n  types: {\n    '&.normal': {\n      color: '#A8A77A'\n    },\n    '&.fire': {\n      color: '#EE8130'\n    },\n    '&.water': {\n      color: '#6390F0'\n    },\n    '&.electric': {\n      color: '#F7D02C'\n    },\n    '&.grass': {\n      color: '#7AC74C'\n    },\n    '&.ice': {\n      color: '#96D9D6'\n    },\n    '&.fighting': {\n      color: '#C22E28'\n    },\n    '&.poison': {\n      color: '#A33EA1'\n    },\n    '&.ground': {\n      color: '#E2BF65'\n    },\n    '&.flying': {\n      color: '#A98FF3'\n    },\n    '&.psychic': {\n      color: '#F95587'\n    },\n    '&.bug': {\n      color: '#A6B91A'\n    },\n    '&.rock': {\n      color: '#B6A136'\n    },\n    '&.ghost': {\n      color: '#735797'\n    },\n    '&.dragon': {\n      color: '#6F35FC'\n    },\n    '&.dark': {\n      color: '#705746'\n    },\n    '&.steel': {\n      color: '#B7B7CE'\n    },\n    '&.fairy': {\n      color: '#D685AD'\n    }\n  }\n}, {\n  name: 'PokemonList'\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"PokemonList\");","map":{"version":3,"sources":["/Users/tadas/Downloads/ui-assessment-pokedex-snr/src/components/PokemonList/PokemonList.tsx"],"names":["React","useState","createUseStyles","useGetPokemons","Modal","PokemonList","classes","useStyles","pokemons","loading","modalOpen","updateModalOpen","selectedPokemon","updateSelectedPokemon","searchText","updateSearchText","filteredPokemon","updateFilteredPokemon","handleTextChange","event","query","target","value","toLowerCase","results","getResults","reduce","resultArray","pokemon","pokemonCopy","name","includes","push","types","subResults","length","handleCardClick","id","handleModalClose","root","search","map","pkmn","pokemonCard","image","specs","number","type","width","textAlign","padding","boxSizing","display","flexDirection","rowGap","color","maxHeight","margin","border","backgroundColor","cursor","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { Pokemon, useGetPokemons } from '../../hooks/useGetPokemons';\nimport { Modal } from '../Modal';\n\nexport const PokemonList = () => {\n  const classes = useStyles();\n  const { pokemons, loading } = useGetPokemons();\n\n  const [modalOpen, updateModalOpen] = useState(false);\n  const [selectedPokemon, updateSelectedPokemon] = useState('');\n  const [searchText, updateSearchText] = useState('');\n  const [filteredPokemon, updateFilteredPokemon] = useState([])\n\n  const handleTextChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const query = event.target.value.toLowerCase();\n    const results = getResults(query);\n\n    updateFilteredPokemon\n    updateSearchText(query);\n  };\n\n  const getResults = (query: string): Pokemon[] => {\n    return pokemons.reduce((resultArray, pokemon) => {\n      // Copy the category, in order to avoid mutating the argument directoy\n      const pokemonCopy = { ...pokemon };\n      // If there is a match, push it to the resultArray.\n      if (pokemon.name.toLowerCase().includes(query)) {\n          resultArray.push(pokemonCopy);\n      // Else, if the category has children, search for match inside its children\n      } else if (pokemon?.types) {\n          const subResults = getResults(pokemon.types, query);\n          // If there are any matches in the children, push the whole category(from top level) to the results array,\n          // so that the array structure can be preserved\n          if (subResults.length) {\n              pokemonCopy.types = subResults;\n              resultArray.push(pokemonCopy);\n          }\n      }\n      return resultArray;\n  }, []);\n  }\n\n  const handleCardClick = (id: string) => {\n    updateSelectedPokemon(id);\n    updateModalOpen(true);\n  };\n\n  const handleModalClose = () => updateModalOpen(false);\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.search}>\n        <input\n          type=\"text\"\n          name=\"search\"\n          value={searchText}\n          onChange={handleTextChange}\n          placeholder=\"Filter Pokémon...\"\n        />\n      </div>\n      {loading && <div>Loading...</div>}\n      {filteredPokemon.map((pkmn) => (\n        <div\n          key={pkmn.id}\n          className={classes.pokemonCard}\n          onClick={() => handleCardClick(pkmn.id)}\n        >\n          <img src={pkmn.image} alt={pkmn.name} />\n          <div className={classes.specs}>\n            <h4>{pkmn.name}</h4>\n            <h5>#{pkmn.number}</h5>\n            {pkmn.types.map((type) => (\n              <div\n                key={type}\n                className={`${classes.types} ${type.toLowerCase()}`}\n              >\n                {type}&nbsp;\n              </div>\n            ))}\n          </div>\n        </div>\n      ))}\n\n      <Modal\n        pokemonId={selectedPokemon}\n        open={modalOpen}\n        onClose={handleModalClose}\n      />\n    </div>\n  );\n};\n\nconst useStyles = createUseStyles(\n  {\n    root: {\n      width: '100%',\n      textAlign: 'center',\n      padding: '32px',\n      boxSizing: 'border-box',\n\n      display: 'flex',\n      flexDirection: 'column',\n      rowGap: '20px',\n    },\n    search: {\n      display: 'flex',\n      width: '100%',\n      '& input': {\n        color: '#171E2b',\n        width: '100%',\n        padding: '10px',\n      },\n    },\n    pokemonCard: {\n      display: 'flex',\n      padding: '10px',\n      '& img': {\n        maxHeight: '100px',\n      },\n      '& h4': {\n        margin: '5px 0px',\n      },\n      '& h5': {\n        margin: '0px 0px 10px 0px',\n      },\n      border: '1px solid #7C89A3',\n      '&:hover': {\n        backgroundColor: 'rgba(0, 0, 0, 0.2)',\n        cursor: 'pointer',\n      },\n    },\n    specs: {\n      textAlign: 'left',\n      marginLeft: '10px',\n    },\n    types: {\n      '&.normal': { color: '#A8A77A' },\n      '&.fire': { color: '#EE8130' },\n      '&.water': { color: '#6390F0' },\n      '&.electric': { color: '#F7D02C' },\n      '&.grass': { color: '#7AC74C' },\n      '&.ice': { color: '#96D9D6' },\n      '&.fighting': { color: '#C22E28' },\n      '&.poison': { color: '#A33EA1' },\n      '&.ground': { color: '#E2BF65' },\n      '&.flying': { color: '#A98FF3' },\n      '&.psychic': { color: '#F95587' },\n      '&.bug': { color: '#A6B91A' },\n      '&.rock': { color: '#B6A136' },\n      '&.ghost': { color: '#735797' },\n      '&.dragon': { color: '#6F35FC' },\n      '&.dark': { color: '#705746' },\n      '&.steel': { color: '#B7B7CE' },\n      '&.fairy': { color: '#D685AD' },\n    },\n  },\n  { name: 'PokemonList' }\n);\n"]},"metadata":{},"sourceType":"module"}