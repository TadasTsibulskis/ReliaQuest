{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useMemo } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nexport const GET_POKEMON = gql`\n  query pokemon($id: String, $name: String){\n  pokemon(id: $id, name: $name){\n    id\n    number\n    name\n    weight{\n      minimum\n      maximum\n    }\n    height{\n      minimum\n      maximum\n    }\n    classification\n    types\n    resistant\n    weaknesses\n    fleeRate\n    maxCP\n    maxHP\n    image\n  }\n}\n`;\nexport const useGetPokemon = id => {\n  _s();\n\n  const {\n    data,\n    ...queryRes\n  } = useQuery(GET_POKEMON, {\n    variables: {\n      id\n    }\n  });\n  const pokemon = useMemo(() => (data === null || data === void 0 ? void 0 : data.pokemon) || [], [data]);\n  return {\n    pokemon,\n    ...queryRes\n  };\n};\n\n_s(useGetPokemon, \"tOw8HyYYxHArYOtpKuNr5N20vBE=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"sources":["/Users/tadas/Downloads/ui-assessment-pokedex-snr/src/hooks/useGetPokemon.ts"],"names":["useMemo","useQuery","gql","GET_POKEMON","useGetPokemon","id","data","queryRes","variables","pokemon"],"mappings":";;AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAoBA,OAAO,MAAMC,WAAW,GAAGD,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAxBO;AA0BP,OAAO,MAAME,aAAa,GAAIC,EAAD,IAAgB;AAAA;;AAC3C,QAAM;AAAEC,IAAAA,IAAF;AAAQ,OAAGC;AAAX,MAAwBN,QAAQ,CAACE,WAAD,EAAc;AAClDK,IAAAA,SAAS,EAAE;AACTH,MAAAA;AADS;AADuC,GAAd,CAAtC;AAMA,QAAMI,OAAgB,GAAGT,OAAO,CAAC,MAAM,CAAAM,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEG,OAAN,KAAiB,EAAxB,EAA4B,CAACH,IAAD,CAA5B,CAAhC;AAEA,SAAO;AACLG,IAAAA,OADK;AAEL,OAAGF;AAFE,GAAP;AAID,CAbM;;GAAMH,a;UACmBH,Q","sourcesContent":["import { useMemo } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\nexport type Pokemon = {\n  id: string;\n  name: string;\n  number: string;\n  weight: {\n    minimum: strin;\n    maximum: string;\n  }\n  height: {\n    minimum: string,\n    maximum: string,\n  }\n  classification: string;\n\n  types: string[];\n  image: string;\n};\n\nexport const GET_POKEMON = gql`\n  query pokemon($id: String, $name: String){\n  pokemon(id: $id, name: $name){\n    id\n    number\n    name\n    weight{\n      minimum\n      maximum\n    }\n    height{\n      minimum\n      maximum\n    }\n    classification\n    types\n    resistant\n    weaknesses\n    fleeRate\n    maxCP\n    maxHP\n    image\n  }\n}\n`;\n\nexport const useGetPokemon = (id: string) => {\n  const { data, ...queryRes } = useQuery(GET_POKEMON, {\n    variables: {\n      id\n    },\n  });\n\n  const pokemon: Pokemon = useMemo(() => data?.pokemon || [], [data]);\n\n  return {\n    pokemon,\n    ...queryRes,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}